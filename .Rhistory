# document function in namespace and descripition DO:
# convert roxygen to .Rd files
devtools::document()
# document function in namespace and descripition DO:
# convert roxygen to .Rd files
devtools::document()
# Now under `data' subfolder should see GeneCounts.rds
devtools::document()
devtools::load_all()
# usethis::use data(name of data)
library(usethis)
devtools::load_all()
sample1 <- read.vcfR("individual1.vcf")
individual1 <- system.file("extdata", "individual1.vcf", package = "CHDNFFilter")
sample1 <- readVCF(individual1)
sample1 <- readVCF("individual1.vcf")
individual1 <- system.file("extdata", "individual1.vcf", package = "CHDNFilter")
sample1 <- readVCF(individual1)
sample1 <- readVCF(individual1)
devtools::load_all()
individual1 <- system.file("extdata", "individual1.vcf", package = "CHDNFilter")
sample1 <- readVCF(individual1)
View(sample1)
library(usethis)
usethis::use_data(sample1)
View(sample1)
individual2 <- system.file("extdata", "individual2.vcf", package = "CHDNFilter")
sample2 <- readVCF(individual2)
usethis::use_data(sample2)
individual3 <- system.file("extdata", "individual3.vcf", package = "CHDNFilter")
sample3 <- readVCF(individual3)
usethis::use_data(sample3)
devtools::document()
devtools::check(vignettes = FALSE)
usethis::use_package("vcfRR", type = "Imports"
usethis::use_package("vcfR", type = "Imports")
usethis::use_package("vcfR", type = "Imports")
# checking
devtools::check()
# Now under `data' subfolder should see GeneCounts.rds
devtools::document()
usethis::use_package("vcfR", type = "Imports")
# Now under `data' subfolder should see GeneCounts.rds
devtools::document()
devtools::load_all()
# checking
devtools::check()
my_plots <- vcfPlotter(sample1)
library("vcfR")
individual1 <- system.file("extdata", "individual1.vcf", package = "CHDNFilter")
my_plots <- vcfPlotter(individual1)
individual1 <- system.file("extdata", "individual1.vcf", package = "CHDNFilter")
my_plots <- vcfPlotter(individual1)
library("vcfR")
individual1 <- system.file("extdata", "individual1.vcf", package = "CHDNFilter")
my_plots <- vcfPlotter(individual1)
my_plots <- vcfPlotter(sample1)
vcffile1 <- vcfR::read.vcfR(file = individual1)
my_plots <- vcfPlotter(vcffile1)
vcfPlotter(vcffile1)
library("vcfR")
individual1 <- system.file("extdata", "individual1.vcf", package = "CHDNFilter")
vcffile1 <- vcfR::read.vcfR(file = individual1)
my_plots <- vcfPlotter(vcffile1)
devtools::load_all()
my_plots <- vcfPlotter(vcffile1)
? create.chromR
create.chromR
create.chromR
plot(chrom)
create.chromR
library(vcfR)
data(vcfR_example)
chrom <- create.chromR('sc50', seq=dna, vcf=vcf, ann=gff)
plot(chrom)
chrom <- create.chromR(vcf=filename)
my_plot <- recordPlot(plot(chrom))
my_plot
library("vcfR")
individual1 <- system.file("extdata", "individual1.vcf", package = "CHDNFilter")
vcffile1 <- vcfR::read.vcfR(file = individual1)
filename <- vcffile1
chrom <- create.chromR(vcf=filename)
chrom <- create.chromR('sc50', seq=dna,vcf=filename,ann=gff )
my_plot <- plot(chrom)
devtools::load_all()
library("vcfR")
individual1 <- system.file("extdata", "individual1.vcf", package = "CHDNFilter")
vcffile1 <- vcfR::read.vcfR(file = individual1)
my_plots <- vcfPlotter(vcffile1)
chrom <- create.chromR(seq=dna, vcf=vcffile1, ann=gff )
my_plot <- plot(chrom)
# Now under `data' subfolder should see GeneCounts.rds
devtools::document()
devtools::load_all()
library("vcfR")
individual1 <- system.file("extdata", "individual1.vcf", package = "CHDNFilter")
vcffile1 <- vcfR::read.vcfR(file = individual1)
# filename <- vcffile1
my_plots <- vcfPlotter(vcffile1)
devtools::load_all()
library("vcfR")
individual1 <- system.file("extdata", "individual1.vcf", package = "CHDNFilter")
vcffile1 <- vcfR::read.vcfR(file = individual1)
# filename <- vcffile1
my_plots <- vcfPlotter(vcffile1)
chrom <- create.chromR(seq=dna, vcf=vcffile1)
plot(chrom)
plot(chrom)
my_plots <- vcfPlotter(vcffile1)
library("vcfR")
individual1 <- system.file("extdata", "individual1.vcf", package = "CHDNFilter")
vcffile1 <- vcfR::read.vcfR(file = individual1)
my_plots <- vcfPlotter(vcffile1)
devtools::load_all()
my_plots <- vcfPlotter(vcffile1)
View(vcffile1)
chrom <- create.chromR(vcf=vcffile1)
my_plot <- plot(chrom)
devtools::load_all()
library("vcfR")
individual1 <- system.file("extdata", "individual1.vcf", package = "CHDNFilter")
vcffile1 <- vcfR::read.vcfR(file = individual1)
chrom <- vcf2chrom(vcffile1)
my_plots <- vcfPlotter(chrom)
plot(chrom)
chrom <- vcf2chrom(vcffile1)
devtools::load_all()
chrom <- vcf2chrom(vcffile1)
?create.chromR
devtools::load_all()
library("vcfR")
individual1 <- system.file("extdata", "individual1.vcf", package = "CHDNFilter")
vcffile1 <- vcfR::read.vcfR(file = individual1)
my_plots <- vcfPlotter(vcffile1)
devtools::load_all()
devtools::check()
library("vcfR")
individual1 <- system.file("extdata", "individual1.vcf", package = "CHDNFilter")
sample1 <- readVCF(individual1)
devtools::load_all()
hetFilterResults <- hetFilter(sample1)
individual_nometa <- cbind(sample1[2], sample1[3])
View(individual_nometa)
patterns <- c("1/0", "0/1")
filtered <- subset(individual_nometa, grepl(paste(patterns, collapse="|"), individual_nometa[,c(10)]))
library("vcfR")
individual1 <- system.file("extdata", "individual1.vcf", package = "CHDNFilter")
sample1 <- readVCF(individual1)
devtools::load_all()
hetFilterResults <- hetFilter(sample1)
individual_fix <- sample1[2]
View(individual_fix)
individual_fix
individual_gt <- individual_info[3]
individual_gt <- sample1[3]
individual_nometa <- cbind(individual_fix, individual_gt)
individual_nometa
patterns <- c("1/0", "0/1")
filtered <- subset(individual_nometa, grepl(paste(patterns, collapse="|"), individual_nometa[,c(10)]))
View(individual_nometa)
View(individual_nometa)
individual_nometa <- rbind(individual_fix, individual_gt)
View(individual_nometa)
individual_nometa <- cbind(individual_fix, individual_gt)
individual_nometa[,c(10)]
individual_nometa[,c(9)]
individual_nometa[,c(2)]
individual_nometa <- merge(individual_fix, individual_gt)
filtered <- subset(individual_nometa, grepl(paste(patterns, collapse="|"), individual_nometa[,c(10)]))
filtered
hetFilterResults <- hetFilter(sample2)
devtools::load_all()
hetFilterResults <- hetFilter(sample1)
individual_fix <- sample2[2]
individual_gt <- sample2[3]
individual_nometa <- merge(individual_fix, individual_gt)
patterns <- c("1/0", "0/1")
filtered <- subset(individual_nometa, grepl(paste(patterns, collapse="|"), individual_nometa[,c(10)]))
filtered
View(individual_nometa)
View(individual_nometa)
hetFilterResults <- hetFilter(sample2)
hetFilterResults <- hetFilter(sample2)
hetFilterResults <- hetFilter(sample2)
devtools::load_all()
hetFilterResults <- hetFilter(sample2)
hetFilterResults <- hetFilter(sample2)
hetFilterResults1 <- hetFilter(sample1)
library(usethis)
devtools::load_all()
usethis::use_data(hetFilterResults1)
usethis::use_data(hetFilterResults2)
hetFilterResults2 <- hetFilter(sample2)
usethis::use_data(hetFilterResults2)
hetFilterResults3 <- hetFilter(sample3)
usethis::use_data(hetFilterResults3)
devtools::load_all()
homFilterResults1 <- homoFilter(sample1)
homFilterResults2 <- homoFilter(sample2)
homFilterResults3 <- homoFilter(sample3)
usethis::use_data(homFilterResults1)
usethis::use_data(homFilterResults2)
usethis::use_data(homFilterResults3)
devtools::load_all()
writeVCF(sample1, homFilterResults1, "individual1_homo.vcf")
writeVCF(sample1[1], homFilterResults1, "individual1_homo.vcf")
devtools::load_all()
devtools::check()
devtools::load_all()
usethis::use_test("test-hetFilter")
usethis::use_test("test-homFilter")
devtools::load_all()
load("~/Documents/BCB410/CHDNFilter/data/homFilterResults1.rda")
nrow(homFilterResults1)
load("~/Documents/BCB410/CHDNFilter/data/hetFilterResults1.rda")
nrow(hetFilterResults1)
devtools::load_all()
usethis::use_mit_license("Jiayang Sun")
usethis::use_readme_rmd()
devtools::build_readme()
devtools::document()
usethis::use_readme_rmd()
devtools::build_readme()
usethis::use_vignette("CHDNFilter")
library("vcfR")
individual1 <- system.file("extdata", "individual1.vcf", package = "CHDNFilter")
vcffile1 <- vcfR::read.vcfR(file = individual1)
my_plots <- vcfPlotter(vcffile1)
devtools::load_all()
devtools::load_all()
devtools::load_all()
citation("CHDNFilter")
devtools::load_all()
devtools::load_all()
devtools::load_all()
hetFilterResults1 <- hetFilter(sample1)
devtools::load_all()
devtools::load_all()
devtools::load_all()
library(CHDNFilter)
devtools::load_all()
devtools::load_all()
require("devtools")
devtools::install_github("sunjiayang0501/CHDNFilter", build_vignettes = TRUE)
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
# The following codes are adapted from Testing package: Introduction_TestPackage.Rmd
library("knitr")
opts_chunk$set(fig.align = "center",
out.width = "90%",
fig.width = 6, fig.height = 5.5,
dev.args=list(pointsize=10),
par = TRUE, # needed for setting hook
collapse = TRUE, # collapse input & ouput code in chunks
warning = FALSE)
knit_hooks$set(par = function(before, options, envir)
{ if(before && options$fig.show != "none")
par(family = "sans", mar=c(4.1,4.1,1.1,1.1), mgp=c(3,1,0), tcl=-0.5)
})
set.seed(10) # for exact reproducibility
require("devtools")
devtools::install_github("sunjiayang0501/CHDNFilter", build_vignettes = TRUE)
library(shiny); runApp('~/Documents/BCB410/HeHoFilter/Untitled.R')
usethis::use_citation()
devtools::load_all()
install.packages("shiny")
install.packages("shiny")
devtools::load_all()
